<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">
    <springProperty scope="context" name="module" source="spring.application.name" defaultValue="app"/>
    <springProperty scope="context" name="jndi-name" source="spring.datasource.jndi-name"/>
    <springProperty scope="context" name="app-log-path" source="application.log-path"/>

    <!-- log-path - путь к месту хранения лог-файлов: -->
    <if condition='property("jndi-name").isEmpty()'>
        <then>
            <property name="log-path" value="${app-log-path}"/>
        </then>
        <else>
            <property name="log-path" value="${env:CATALINA_HOME}/logs/${module}"/>
        </else>
    </if>

    <!-- log-path - путь к месту хранения лог-файлов: -->
<!--    <if condition='(springProperty("jndi-name")==null)||springProperty("jndi-name").isEmpty()'>-->
<!--        <then>-->
<!--            <property name="log-path" value="${env:CATALINA_HOME}/logs/${module}"/>-->
<!--        </then>-->
<!--        <else>-->
<!--            <property name="log-path" value="${app-log-path}"/>-->
<!--        </else>-->
<!--    </if>-->
        <!-- Каталог к месту хранения лог-файлов: -->
        <!-- 1. Для выполнения на внешнем Tomcat. Берет значение из переменной среды CATALINA_HOME.
                Необходимо, чтобы была установлена эта переменная среды перед запуском приложения. Т.е. в bat
                файле нужно выполнить команду:  set "CATALINA_HOME=.".
                Можно выполнять приложение и на встроенном Tomcat, но в этом случае файлы логов будут писаться в каталог,
                к пути которого добавляются каталоги logs/имя-модуля. -->
<!--        <Property name="log-path" value="${env:CATALINA_HOME}/logs/${module}"/>-->
        <!-- 2. Для выполнения на встроенном Tomcat. Берет значение из свойства application.log-path. -->
<!--        <Property name="log-path" value="${bundle:application:application.log-path}"/>-->

    <!-- To enable JMX Management -->
    <jmxConfigurator/>

    <appender name="file" class="ch.qos.logback.core.FileAppender">
        <file>${log-path}/${module}.log</file>
<!--        <file>${TOPJAVA_ROOT}/log/topjava.log</file>-->

        <encoder>
            <charset>UTF-8</charset>
            <pattern>%date %-5level %logger{50}.%M:%L - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <charset>UTF-8</charset>
            <pattern>%d{HH:mm:ss.SSS} %highlight(%-5level) %cyan(%class{50}.%M:%L) - %msg%n</pattern>
        </encoder>
    </appender>

    <logger name="ua.mai.fam" level="debug"/>
    <!--<logger name="org.springframework.web.servlet" level="debug"/>-->
    <logger name="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver" level="debug"/>
    <logger name="org.springframework.security" level="debug"/>
<!--    <logger name="org.springframework.security.web.csrf.CsrfFilter" level="debug"/>-->

    <root level="info">
        <appender-ref ref="file"/>
        <appender-ref ref="console"/>
    </root>
</configuration>
